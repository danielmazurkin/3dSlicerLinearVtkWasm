import { readAsArrayBuffer } from 'promise-file-reader';
import readImageDICOMArrayBufferSeries from './readImageDICOMArrayBufferSeries.js';
const readImageDICOMFileSeries = async (fileList, options) => {
    const fetchFileContents = Array.from(fileList, async function (file) {
        return await readAsArrayBuffer(file);
    });
    const fileContents = await Promise.all(fetchFileContents);
    let optionsToPass = {};
    if (typeof options === 'object') {
        optionsToPass = Object.assign({}, options);
    }
    if (typeof options === 'boolean') {
        // Backwards compatibility
        optionsToPass.singleSortedSeries = options;
    }
    const fileNames = Array.from(fileList, (file) => file.name);
    optionsToPass.fileNames = fileNames;
    return await readImageDICOMArrayBufferSeries(fileContents, optionsToPass);
};
export default readImageDICOMFileSeries;
//# sourceMappingURL=readImageDICOMFileSeries.js.map